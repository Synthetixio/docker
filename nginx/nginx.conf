user  nginx;
worker_processes  auto;
worker_rlimit_nofile  65535;

load_module modules/ngx_http_modsecurity_module.so;
load_module modules/ngx_http_geoip2_module.so;
load_module modules/ngx_http_waf_module.so;
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

error_log  /dev/stdout error;
pid        /var/run/nginx.pid;

events {
    worker_connections 65535;
    multi_accept       on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  yaml    '- remote_addr: "$remote_addr"\n'
                        '  remote_user: "$remote_user"\n'
                        '  time_local: "$time_local"\n'
                        '  request: "$request"\n'
                        '  status: "$status"\n'
                        '  body_bytes_sent: "$body_bytes_sent"\n'
                        '  http_referer: "$http_referer"\n'
                        '  http_user_agent: "$http_user_agent"\n'
                        '  http_x_forwarded_for: "$http_x_forwarded_for"\n'
                        '  waf_blocked: $waf_blocked\n'
                        '  waf_spend: $waf_spend\n'
                        '  waf_rule_type: "$waf_rule_type"\n'
                        '  waf_rule_details: "$waf_rule_details"\n';

    access_log off;

    charset                     utf-8;
    sendfile                     on;
    keepalive_timeout           5;
    autoindex                   off;
    port_in_redirect            off;
    tcp_nopush                  on;
    tcp_nodelay                 on;
    types_hash_max_size         2048;
    types_hash_bucket_size      64;
    client_max_body_size        200k;
    client_body_buffer_size     128k;
    client_header_buffer_size   16k;
    large_client_header_buffers 3 1k;
    fastcgi_buffer_size         16k;
    fastcgi_buffers             4 16k;
    server_tokens               off;
    log_not_found               off;
    proxy_ignore_client_abort   on;
    client_body_timeout         5s;
    client_header_timeout       5s;

    open_file_cache             max=35000 inactive=30s;
    open_file_cache_valid       30s;
    open_file_cache_min_uses    2;

    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;
    gzip_buffers 16 8k;
    gzip_min_length     0;
    gzip_disable msie6;

    brotli on;
    brotli_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
    brotli_comp_level 6;

    # link iso country codes from the geoip2 db
    geoip2 /etc/nginx/geoip/dbip-country-lite.mmdb {
        $geoip2_data_country_code country iso_code;
    }

    # map HSTS header
    map $scheme $hsts_header { https "max-age=31556926; includeSubDomains; preload"; }

    # map status to exclude from access log
    map $status $writelog { 444 0; default 1; }

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {
        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$        "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    # not needed, handled with waf
    # limit_req_zone $binary_remote_addr zone=reqperip:10m rate=2r/s;
    # limit_req_status 429;

    # limit_conn_zone $binary_remote_addr zone=connperip:10m;
    # limit_conn_status 429;

    include /etc/nginx/conf.d/*.conf;
}
